  [1m[35m (9.6ms)[0m  [1m[35mCREATE DATABASE `accounts_book_development` DEFAULT CHARACTER SET `utf8mb4`[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE DATABASE `accounts_book_test` DEFAULT CHARACTER SET `utf8mb4`[0m
Migrating to DeviseCreateUsers (20220218065228)
Migrating to AddNameToUsers (20220218065714)
Migrating to DeviseCreateUsers (20220218064228)
Migrating to DeviseCreateUsers (20220218064228)
Migrating to DeviseCreateUsers (20220218064228)
Migrating to DeviseCreateUsers (20220218064228)
Migrating to DeviseCreateUsers (20220218064228)
Migrating to DeviseCreateUsers (20220218064228)
Migrating to DeviseCreateUsers (20220218064228)
Migrating to CreateIncomes (20220218065215)
Migrating to AddNameToUsers (20220218065714)
Migrating to CreateExpenses (20220218065744)
Started GET "/" for ::1 at 2022-02-24 14:02:42 +0900
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/takedawashin/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/railties-6.0.4.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/takedawashin/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/railties-6.0.4.6/lib/rails/templates/rails/welcome/index.html.erb (Duration: 5.4ms | Allocations: 305)
Completed 200 OK in 14ms (Views: 7.8ms | ActiveRecord: 0.0ms | Allocations: 2550)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:03:02 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.4ms | Allocations: 618)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: 146980a5dfeae185daf0
Version: webpack 4.46.0
Time: 1459ms
Built at: 2022/02/24 14:03:06
                                     Asset       Size       Chunks                         Chunk Names
    js/application-211b898d8330914ee010.js    124 KiB  application  [emitted] [immutable]  application
js/application-211b898d8330914ee010.js.map    139 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-211b898d8330914ee010.js js/application-211b898d8330914ee010.js.map
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 749 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 3 hidden modules

Completed 200 OK in 4122ms (Views: 4121.0ms | ActiveRecord: 0.0ms | Allocations: 1807851)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:03:17 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 5)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 6ms (Views: 5.5ms | ActiveRecord: 0.0ms | Allocations: 8194)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:08:19 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.1ms | Allocations: 5)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.0ms | Allocations: 8168)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:08:21 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 17ms (Views: 16.5ms | ActiveRecord: 0.0ms | Allocations: 8163)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:08:27 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.0ms | Allocations: 8162)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:10:56 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 5)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: a7c5a6951afbfe65690b
Version: webpack 4.46.0
Time: 708ms
Built at: 2022/02/24 14:10:58
                                     Asset       Size       Chunks                         Chunk Names
    js/application-ef6bb65bacc843a24f6c.js    125 KiB  application  [emitted] [immutable]  application
js/application-ef6bb65bacc843a24f6c.js.map    140 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-ef6bb65bacc843a24f6c.js js/application-ef6bb65bacc843a24f6c.js.map
[./app/assets/javascript/application.js] 745 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 798 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 3 hidden modules

Completed 200 OK in 2111ms (Views: 2110.4ms | ActiveRecord: 0.0ms | Allocations: 79976)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:18:32 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.7ms | Allocations: 98)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 13ms (Views: 12.3ms | ActiveRecord: 0.0ms | Allocations: 9295)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:20:18 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 10ms (Views: 9.0ms | ActiveRecord: 0.0ms | Allocations: 8167)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:25:21 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.3ms | Allocations: 92)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 14ms (Views: 12.5ms | ActiveRecord: 0.0ms | Allocations: 9276)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:25:22 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 6ms (Views: 5.7ms | ActiveRecord: 0.0ms | Allocations: 8163)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:26:43 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 11ms (Views: 10.1ms | ActiveRecord: 0.0ms | Allocations: 12543)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:26:45 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms | Allocations: 8158)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:26:46 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.0ms | Allocations: 8812)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:27:05 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.7ms | Allocations: 207)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 973ms (Views: 966.4ms | ActiveRecord: 0.0ms | Allocations: 1651831)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:27:07 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 5)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.0ms | Allocations: 8163)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:28:11 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.5ms | Allocations: 95)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 11ms (Views: 9.8ms | ActiveRecord: 0.0ms | Allocations: 9268)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:30:32 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: ac90c66305e724c1d171
Version: webpack 4.46.0
Time: 666ms
Built at: 2022/02/24 14:30:34
                                     Asset       Size       Chunks                         Chunk Names
    js/application-6beaf3d2d58b82b066e1.js   72.1 KiB  application  [emitted] [immutable]  application
js/application-6beaf3d2d58b82b066e1.js.map   81.4 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-6beaf3d2d58b82b066e1.js js/application-6beaf3d2d58b82b066e1.js.map
[./app/assets/javascript/application.js] 768 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 799 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 2 hidden modules

Completed 200 OK in 2141ms (Views: 2140.0ms | ActiveRecord: 0.0ms | Allocations: 52611)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:36:51 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 5)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: 2ad53a97374ab7f0c5a6
Version: webpack 4.46.0
Time: 661ms
Built at: 2022/02/24 14:36:53
                                     Asset       Size       Chunks                         Chunk Names
    js/application-7f52350da7245f9c5ea7.js   72.1 KiB  application  [emitted] [immutable]  application
js/application-7f52350da7245f9c5ea7.js.map   81.4 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-7f52350da7245f9c5ea7.js js/application-7f52350da7245f9c5ea7.js.map
[./app/assets/javascript/application.js] 768 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 802 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 2 hidden modules

Completed 200 OK in 2188ms (Views: 2187.2ms | ActiveRecord: 0.0ms | Allocations: 59867)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:36:55 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 5)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.0ms | Allocations: 8166)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:36:57 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.0ms | Allocations: 8160)


Started GET "/" for ::1 at 2022-02-24 14:45:02 +0900
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/takedawashin/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/railties-6.0.4.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/takedawashin/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/railties-6.0.4.6/lib/rails/templates/rails/welcome/index.html.erb (Duration: 5.2ms | Allocations: 305)
Completed 200 OK in 11ms (Views: 6.8ms | ActiveRecord: 0.0ms | Allocations: 2642)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:45:12 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.5ms | Allocations: 682)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: 07f94f050b8cfdbb947a
Version: webpack 4.46.0
Time: 624ms
Built at: 2022/02/24 14:45:15
                                     Asset       Size       Chunks                         Chunk Names
    js/application-45a2a9af34941ec03dc1.js   72.1 KiB  application  [emitted] [immutable]  application
js/application-45a2a9af34941ec03dc1.js.map   81.4 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-45a2a9af34941ec03dc1.js js/application-45a2a9af34941ec03dc1.js.map
[./app/assets/javascript/application.js] 768 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 799 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 2 hidden modules

Completed 200 OK in 2764ms (Views: 2763.0ms | ActiveRecord: 0.0ms | Allocations: 1744142)


Started GET "/incomes/index" for ::1 at 2022-02-24 14:51:51 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 5)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: ef2336aeed80c647e0bf
Version: webpack 4.46.0
Time: 752ms
Built at: 2022/02/24 14:51:53
                                     Asset       Size       Chunks                         Chunk Names
    js/application-df2547a0bbf1ddb20598.js    125 KiB  application  [emitted] [immutable]  application
js/application-df2547a0bbf1ddb20598.js.map    140 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-df2547a0bbf1ddb20598.js js/application-df2547a0bbf1ddb20598.js.map
[./app/assets/javascript/application.js] 768 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 798 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 3 hidden modules

Completed 200 OK in 2249ms (Views: 2247.5ms | ActiveRecord: 0.0ms | Allocations: 79999)


Started GET "/incomes/index" for ::1 at 2022-02-24 15:00:12 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: 16f73faa76886fb6bdb7
Version: webpack 4.46.0
Time: 817ms
Built at: 2022/02/24 15:00:15
                                     Asset       Size       Chunks                         Chunk Names
    js/application-0aa86bc235ddbad5fc3b.js    125 KiB  application  [emitted] [immutable]  application
js/application-0aa86bc235ddbad5fc3b.js.map    140 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-0aa86bc235ddbad5fc3b.js js/application-0aa86bc235ddbad5fc3b.js.map
[./app/javascript/calendar.js] 813 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 774 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 3 hidden modules

Completed 200 OK in 2460ms (Views: 2459.4ms | ActiveRecord: 0.0ms | Allocations: 105502)


Started GET "/incomes/index" for ::1 at 2022-02-24 15:08:21 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.4ms | Allocations: 78)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 19ms (Views: 17.7ms | ActiveRecord: 0.0ms | Allocations: 13568)


Started GET "/incomes/index" for ::1 at 2022-02-24 15:08:48 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.2ms | Allocations: 85)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 10ms (Views: 8.9ms | ActiveRecord: 0.0ms | Allocations: 9377)


Started GET "/" for ::1 at 2022-02-24 15:13:55 +0900
  
ArgumentError (Missing :controller key on routes definition, please check your routes.):
  
config/routes.rb:2:in `block in <main>'
config/routes.rb:1:in `<main>'
Started GET "/" for ::1 at 2022-02-24 15:15:15 +0900
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/takedawashin/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/railties-6.0.4.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/takedawashin/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/railties-6.0.4.6/lib/rails/templates/rails/welcome/index.html.erb (Duration: 7.1ms | Allocations: 190)
Completed 200 OK in 11ms (Views: 7.6ms | ActiveRecord: 0.0ms | Allocations: 2301)


Started GET "/incomes/index" for ::1 at 2022-02-24 15:42:37 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 1.0ms | Allocations: 201)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: 4e0f25123ae097ad7ac9
Version: webpack 4.46.0
Time: 3552ms
Built at: 2022/02/24 15:42:42
                                     Asset       Size       Chunks                         Chunk Names
    js/application-16990450f380662c8d9d.js    871 KiB  application  [emitted] [immutable]  application
js/application-16990450f380662c8d9d.js.map    873 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-16990450f380662c8d9d.js js/application-16990450f380662c8d9d.js.map
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 1.12 KiB {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 19 hidden modules

Completed 200 OK in 5621ms (Views: 5613.3ms | ActiveRecord: 0.0ms | Allocations: 1769463)


Started GET "/incomes/index" for ::1 at 2022-02-24 15:42:43 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 4)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms | Allocations: 5924)


Started GET "/incomes/index" for ::1 at 2022-02-24 16:08:00 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.7ms | Allocations: 201)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/takedawashin/projects/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: c9f1d357ccd24bb77d58
Version: webpack 4.46.0
Time: 1602ms
Built at: 2022/02/24 16:08:04
                                     Asset       Size       Chunks                         Chunk Names
    js/application-4f56a5f2657319414717.js    871 KiB  application  [emitted] [immutable]  application
js/application-4f56a5f2657319414717.js.map    874 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-4f56a5f2657319414717.js js/application-4f56a5f2657319414717.js.map
[./app/javascript/calendar.js] 394 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 774 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 19 hidden modules

Completed 200 OK in 3570ms (Views: 3563.4ms | ActiveRecord: 0.0ms | Allocations: 1718870)


Started GET "/" for ::1 at 2022-03-01 13:13:07 +0900
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/kn/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/railties-6.0.4.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/kn/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/railties-6.0.4.6/lib/rails/templates/rails/welcome/index.html.erb (Duration: 8.4ms | Allocations: 305)
Completed 200 OK in 29ms (Views: 17.6ms | ActiveRecord: 0.0ms | Allocations: 1824)


Started GET "/incomes/index" for ::1 at 2022-03-01 13:13:16 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 1.0ms | Allocations: 92)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: ff1c46f687ab1ddc3cc3
Version: webpack 4.46.0
Time: 3975ms
Built at: 2022/03/01 13:13:27
                                     Asset       Size       Chunks                         Chunk Names
    js/application-9e6a1f9d23df6afe0dc0.js    872 KiB  application  [emitted] [immutable]  application
js/application-9e6a1f9d23df6afe0dc0.js.map    874 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-9e6a1f9d23df6afe0dc0.js js/application-9e6a1f9d23df6afe0dc0.js.map
[./app/javascript/calendar.js] 619 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 774 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 19 hidden modules

Completed 200 OK in 10491ms (Views: 10488.7ms | ActiveRecord: 0.0ms | Allocations: 2019332)


Started GET "/users/sign_in" for ::1 at 2022-03-01 13:38:46 +0900
Processing by Devise::SessionsController#new as HTML
  Rendering devise/sessions/new.html.erb within layouts/application
  Rendered devise/shared/_links.html.erb (Duration: 2.0ms | Allocations: 621)
  Rendered devise/sessions/new.html.erb within layouts/application (Duration: 83.1ms | Allocations: 9451)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 2462ms (Views: 2375.5ms | ActiveRecord: 59.7ms | Allocations: 1711958)


Started GET "/users/sign_up" for ::1 at 2022-03-01 13:39:43 +0900
Processing by Devise::RegistrationsController#new as HTML
  Rendering devise/registrations/new.html.erb within layouts/application
  Rendered devise/shared/_error_messages.html.erb (Duration: 2.5ms | Allocations: 204)
  Rendered devise/shared/_links.html.erb (Duration: 0.4ms | Allocations: 125)
  Rendered devise/registrations/new.html.erb within layouts/application (Duration: 13.1ms | Allocations: 1877)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 65ms (Views: 54.3ms | ActiveRecord: 0.0ms | Allocations: 7844)


Started GET "/users/edit" for ::1 at 2022-03-01 13:40:07 +0900
Processing by Devise::RegistrationsController#edit as HTML
Completed 401 Unauthorized in 1ms (ActiveRecord: 0.0ms | Allocations: 288)


Started GET "/users/sign_in" for ::1 at 2022-03-01 13:40:07 +0900
Processing by Devise::SessionsController#new as HTML
  Rendering devise/sessions/new.html.erb within layouts/application
  Rendered devise/shared/_links.html.erb (Duration: 1.4ms | Allocations: 134)
  Rendered devise/sessions/new.html.erb within layouts/application (Duration: 9.0ms | Allocations: 1088)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 60ms (Views: 58.6ms | ActiveRecord: 0.0ms | Allocations: 6447)


Started GET "/incomes/index" for ::1 at 2022-03-01 13:46:09 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 1.1ms | Allocations: 92)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 40ms (Views: 35.3ms | ActiveRecord: 0.0ms | Allocations: 5845)


Started GET "/incomes/index" for ::1 at 2022-03-01 13:57:56 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 1.3ms | Allocations: 210)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: fb02effab20002347bcf
Version: webpack 4.46.0
Time: 3534ms
Built at: 2022/03/01 13:58:05
                                     Asset       Size       Chunks                         Chunk Names
    js/application-56e5e0bd2439c552a51d.js    872 KiB  application  [emitted] [immutable]  application
js/application-56e5e0bd2439c552a51d.js.map    874 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-56e5e0bd2439c552a51d.js js/application-56e5e0bd2439c552a51d.js.map
[./app/javascript/calendar.js] 619 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 815 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 19 hidden modules

Completed 200 OK in 8621ms (Views: 8613.0ms | ActiveRecord: 0.0ms | Allocations: 1848412)


Started GET "/incomes/index" for ::1 at 2022-03-01 13:59:05 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 0.0ms | Allocations: 5)
[Webpacker] Compiling...
[Webpacker] Compilation failed:
Hash: e3971ae493489bbbd387
Version: webpack 4.46.0
Time: 3586ms
Built at: 2022/03/01 13:59:12
                                     Asset       Size       Chunks                         Chunk Names
    js/application-4872045ff2eeee51c74d.js    872 KiB  application  [emitted] [immutable]  application
js/application-4872045ff2eeee51c74d.js.map    874 KiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-4872045ff2eeee51c74d.js js/application-4872045ff2eeee51c74d.js.map
[./app/javascript/calendar.js] 619 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 818 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 19 hidden modules

ERROR in ./app/javascript/packs/application.js
Module not found: Error: Can't resolve 'jquery' in '/Users/kn/original/accounts_book/app/javascript/packs'
 @ ./app/javascript/packs/application.js 15:0-17

ERROR in ./app/javascript/packs/application.js
Module not found: Error: Can't resolve 'jquery_ujs' in '/Users/kn/original/accounts_book/app/javascript/packs'
 @ ./app/javascript/packs/application.js 17:0-21


Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

Completed 200 OK in 6834ms (Views: 6833.8ms | ActiveRecord: 0.0ms | Allocations: 157649)


Started GET "/incomes/index" for ::1 at 2022-03-01 14:01:41 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/index.html.erb within layouts/application (Duration: 4.9ms | Allocations: 210)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: 80660d70e2066e13cba1
Version: webpack 4.46.0
Time: 7660ms
Built at: 2022/03/01 14:01:54
                                     Asset       Size       Chunks                         Chunk Names
    js/application-1c5689266bba0c95f921.js   1.55 MiB  application  [emitted] [immutable]  application
js/application-1c5689266bba0c95f921.js.map    1.6 MiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-1c5689266bba0c95f921.js js/application-1c5689266bba0c95f921.js.map
[./app/javascript/calendar.js] 619 bytes {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 794 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 127 hidden modules

Completed 200 OK in 12910ms (Views: 12884.9ms | ActiveRecord: 0.0ms | Allocations: 1936389)


Started GET "/" for ::1 at 2022-05-23 23:30:54 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 19.2ms | Allocations: 6537)
  Rendered incomes/_expense.html.erb (Duration: 5.5ms | Allocations: 4406)
  Rendered incomes/_edit.html.erb (Duration: 45.2ms | Allocations: 9458)
  Rendered incomes/_expense.html.erb (Duration: 1.7ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 79.3ms | Allocations: 25148)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 2648ms (Views: 2604.9ms | ActiveRecord: 26.9ms | Allocations: 2174969)


Started GET "/incomes/card/?date=2022-04-17" for ::1 at 2022-05-23 23:31:02 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-04-17"}
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 13.4ms | Allocations: 563)


Started PATCH "/incomes/1" for ::1 at 2022-05-23 23:31:08 +0900
Processing by IncomesController#update as HTML
  Parameters: {"authenticity_token"=>"j/oyb//2OplTVmFuNqXJSdKsuQ1brOzfD3L8bj2oWlVC4KQJNbcso9BQxX/aIaZCDje1TBq3GmeJFo4MNnZckA==", "income"=>{"date(1i)"=>"2022", "date(2i)"=>"3", "date(3i)"=>"16", "amount"=>"2000", "income_item_id"=>"2", "memo"=>""}, "commit"=>"登録する", "id"=>"1"}
Redirected to http://localhost:3000/
Completed 302 Found in 14901ms (ActiveRecord: 87.4ms | Allocations: 393183)


Started GET "/" for ::1 at 2022-05-23 23:31:23 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 1.6ms | Allocations: 3425)
  Rendered incomes/_expense.html.erb (Duration: 1.4ms | Allocations: 3542)
  Rendered incomes/_edit.html.erb (Duration: 2.4ms | Allocations: 1778)
  Rendered incomes/_expense.html.erb (Duration: 1.6ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 7.7ms | Allocations: 12557)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 36ms (Views: 32.4ms | ActiveRecord: 1.9ms | Allocations: 21884)


Started GET "/incomes/card/?date=2022-04-17" for ::1 at 2022-05-23 23:31:29 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-04-17"}
Completed 200 OK in 26ms (Views: 0.7ms | ActiveRecord: 23.9ms | Allocations: 551)


Started GET "/incomes/card/?date=2022-03-16" for ::1 at 2022-05-23 23:31:45 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-03-16"}
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 23.1ms | Allocations: 621)


Started GET "/" for ::1 at 2022-05-23 23:33:00 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.4ms | Allocations: 3422)
  Rendered incomes/_expense.html.erb (Duration: 3.8ms | Allocations: 3541)
  Rendered incomes/_edit.html.erb (Duration: 6.4ms | Allocations: 1780)
  Rendered incomes/_expense.html.erb (Duration: 2.4ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 19.0ms | Allocations: 13571)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 57ms (Views: 49.8ms | ActiveRecord: 5.2ms | Allocations: 30270)


Started GET "/" for ::1 at 2022-05-23 23:33:03 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.6ms | Allocations: 3767)
  Rendered incomes/_expense.html.erb (Duration: 3.4ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 3.4ms | Allocations: 2126)
  Rendered incomes/_expense.html.erb (Duration: 3.2ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 17.4ms | Allocations: 14385)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 37ms (Views: 33.7ms | ActiveRecord: 1.2ms | Allocations: 25395)


Started POST "/incomes" for ::1 at 2022-05-23 23:33:11 +0900
Processing by IncomesController#create as HTML
  Parameters: {"authenticity_token"=>"exB7ZPhVdRtuTIbAfqMLtOye8aevQ4Lkk9EC24jf9T22Cu0CMhRjIe1KItGSJ2S/MAX95u5YdFwVtXC5gwHz+A==", "date(1i)"=>"2022", "date(2i)"=>"5", "date(3i)"=>"23", "amount"=>"500", "income_item_id"=>"2", "memo"=>"", "commit"=>"登録する"}
Completed 400 Bad Request in 1ms (ActiveRecord: 0.0ms | Allocations: 701)


  
ActionController::ParameterMissing (param is missing or the value is empty: income):
  
app/controllers/incomes_controller.rb:65:in `income_params'
app/controllers/incomes_controller.rb:24:in `create'
Started POST "/incomes" for ::1 at 2022-05-23 23:33:53 +0900
Processing by IncomesController#create as HTML
  Parameters: {"authenticity_token"=>"exB7ZPhVdRtuTIbAfqMLtOye8aevQ4Lkk9EC24jf9T22Cu0CMhRjIe1KItGSJ2S/MAX95u5YdFwVtXC5gwHz+A==", "date(1i)"=>"2022", "date(2i)"=>"5", "date(3i)"=>"23", "amount"=>"500", "income_item_id"=>"2", "memo"=>"", "commit"=>"登録する"}
Redirected to http://localhost:3000/
Completed 302 Found in 81ms (ActiveRecord: 56.1ms | Allocations: 15179)


Started GET "/" for ::1 at 2022-05-23 23:33:53 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.2ms | Allocations: 3428)
  Rendered incomes/_expense.html.erb (Duration: 17.9ms | Allocations: 4048)
  Rendered incomes/_edit.html.erb (Duration: 3.4ms | Allocations: 1971)
  Rendered incomes/_expense.html.erb (Duration: 2.9ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 27.5ms | Allocations: 13258)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 42ms (Views: 38.6ms | ActiveRecord: 1.9ms | Allocations: 22759)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:33:57 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 7.6ms | Allocations: 515)


Started GET "/" for ::1 at 2022-05-23 23:34:33 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 4.6ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 5.9ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 6.7ms | Allocations: 2126)
  Rendered incomes/_expense.html.erb (Duration: 2.3ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 23.9ms | Allocations: 14383)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 41ms (Views: 36.9ms | ActiveRecord: 2.1ms | Allocations: 24772)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:34:35 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 8.9ms | Allocations: 525)


Started PATCH "/incomes/6" for ::1 at 2022-05-23 23:34:43 +0900
Processing by IncomesController#update as HTML
  Parameters: {"authenticity_token"=>"e8dkPubqWrLFSwsVX2aKiAiF4eBdylB7VEjycOwNWda23fJYLKtMiEZNrwSz4uWD1B7toRzRpsPSLIAS59NfEw==", "income"=>{"date(1i)"=>"2022", "date(2i)"=>"5", "date(3i)"=>"23", "amount"=>"1000", "income_item_id"=>"2", "memo"=>""}, "commit"=>"登録する", "id"=>"6"}
Redirected to http://localhost:3000/
Completed 302 Found in 20408ms (ActiveRecord: 3.1ms | Allocations: 507277)


Started GET "/" for ::1 at 2022-05-23 23:35:04 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.8ms | Allocations: 3425)
  Rendered incomes/_expense.html.erb (Duration: 1.6ms | Allocations: 3542)
  Rendered incomes/_edit.html.erb (Duration: 4.2ms | Allocations: 1778)
  Rendered incomes/_expense.html.erb (Duration: 2.3ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 11.9ms | Allocations: 12556)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 22ms (Views: 18.2ms | ActiveRecord: 2.8ms | Allocations: 21915)


Started GET "/" for ::1 at 2022-05-23 23:35:54 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.7ms | Allocations: 3604)
  Rendered incomes/_expense.html.erb (Duration: 3.6ms | Allocations: 4046)
  Rendered incomes/_edit.html.erb (Duration: 54.2ms | Allocations: 7896)
  Rendered incomes/_expense.html.erb (Duration: 1.4ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 64.1ms | Allocations: 19358)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 78ms (Views: 33.7ms | ActiveRecord: 42.6ms | Allocations: 29650)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:35:56 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 1.2ms | Allocations: 521)


Started PATCH "/incomes/6" for ::1 at 2022-05-23 23:36:01 +0900
Processing by IncomesController#update as HTML
  Parameters: {"authenticity_token"=>"v1/WyJoSYIe+JzBPmcVgfg1mdzxHPpjo1qWIc7EjH79yRUCuUFN2vT0hlF51QQ910f17fQYlblBQwfoRuv0Zeg==", "income"=>{"date(1i)"=>"2022", "date(2i)"=>"5", "date(3i)"=>"23", "amount"=>"1000", "income_item_id"=>"2", "memo"=>""}, "commit"=>"登録する", "id"=>"6"}
Redirected to http://localhost:3000/
Completed 302 Found in 4999ms (ActiveRecord: 52.4ms | Allocations: 139086)


Started GET "/" for ::1 at 2022-05-23 23:36:06 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 1.5ms | Allocations: 3420)
  Rendered incomes/_expense.html.erb (Duration: 1.3ms | Allocations: 3541)
  Rendered incomes/_edit.html.erb (Duration: 1.9ms | Allocations: 1775)
  Rendered incomes/_expense.html.erb (Duration: 1.9ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 7.4ms | Allocations: 12547)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 22ms (Views: 17.1ms | ActiveRecord: 3.1ms | Allocations: 21893)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:36:22 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.6ms | Allocations: 1290)


Started PATCH "/incomes/6" for ::1 at 2022-05-23 23:36:30 +0900
Processing by IncomesController#update as HTML
  Parameters: {"authenticity_token"=>"mYHlwOmRXN+v3Jgu4WPFL4UaotxLcoZoZiZfmnH/ikFUm3OmI9BK5SzaPD8N56okWYGunQppcNDgQi34eiGMhA==", "income"=>{"date(1i)"=>"2022", "date(2i)"=>"5", "date(3i)"=>"23", "amount"=>"2000", "income_item_id"=>"2", "memo"=>""}, "commit"=>"登録する", "id"=>"6"}
Redirected to http://localhost:3000/
Completed 302 Found in 56ms (ActiveRecord: 13.3ms | Allocations: 16457)


Started GET "/" for ::1 at 2022-05-23 23:36:30 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.5ms | Allocations: 3428)
  Rendered incomes/_expense.html.erb (Duration: 4.0ms | Allocations: 4046)
  Rendered incomes/_edit.html.erb (Duration: 2.9ms | Allocations: 1830)
  Rendered incomes/_expense.html.erb (Duration: 2.4ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 13.8ms | Allocations: 13115)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 40ms (Views: 30.3ms | ActiveRecord: 8.1ms | Allocations: 22620)


Started GET "/" for ::1 at 2022-05-23 23:44:05 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.5ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 3.6ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 348.2ms | Allocations: 177157)
  Rendered incomes/index.html.erb within layouts/application (Duration: 358.7ms | Allocations: 186068)
Completed 500 Internal Server Error in 373ms (ActiveRecord: 6.0ms | Allocations: 189852)


  
ActionView::Template::Error (undefined local variable or method `id' for #<#<Class:0x00007ff7e16e3cd8>:0x00007ff7e16e2338>
Did you mean?  @@id):
    1: <div class="modal-body">
    2: 
    3:   <%= form_with model: Income.find(id), local: true do |f| %>
    4: 
    5:     <%# 日付入力フォーム %>
    6:     <div class="date-contents">
  
app/views/incomes/_edit.html.erb:3
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-23 23:44:22 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 4.9ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 3.3ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 4.5ms | Allocations: 2126)
  Rendered incomes/_expense.html.erb (Duration: 3.1ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 19.3ms | Allocations: 14383)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 48ms (Views: 41.2ms | ActiveRecord: 4.2ms | Allocations: 24789)


Started GET "/" for ::1 at 2022-05-23 23:45:07 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.0ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 4.5ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 4.1ms | Allocations: 4301)
  Rendered incomes/_expense.html.erb (Duration: 2.7ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 18.5ms | Allocations: 16555)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 36ms (Views: 30.5ms | ActiveRecord: 2.2ms | Allocations: 26972)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:45:10 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 14.2ms | Allocations: 517)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:45:33 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 1.2ms | Allocations: 522)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:45:34 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 3.4ms | Allocations: 512)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:45:35 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 504)


Started GET "/" for ::1 at 2022-05-23 23:45:40 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.6ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 2.9ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 7.8ms | Allocations: 2126)
  Rendered incomes/_expense.html.erb (Duration: 1.5ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 20.5ms | Allocations: 14383)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 47ms (Views: 32.2ms | ActiveRecord: 12.2ms | Allocations: 24803)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-23 23:45:42 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 7.6ms | Allocations: 514)


Started PATCH "/incomes/6" for ::1 at 2022-05-23 23:45:48 +0900
Processing by IncomesController#update as HTML
  Parameters: {"authenticity_token"=>"K4kumTXweDQ1hz8utexT1uhm71vWLtAwLd2ivn9Bcsrmk7j//7FuDraBmz9ZaDzdNP3jGpc1JoirudDcdJ90Dw==", "income"=>{"date(1i)"=>"2022", "date(2i)"=>"5", "date(3i)"=>"23", "amount"=>"1000", "income_item_id"=>"2", "memo"=>""}, "commit"=>"登録する", "id"=>"6"}
Redirected to http://localhost:3000/
Completed 302 Found in 50ms (ActiveRecord: 45.1ms | Allocations: 1578)


Started GET "/" for ::1 at 2022-05-23 23:45:48 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 1.5ms | Allocations: 3427)
  Rendered incomes/_expense.html.erb (Duration: 1.3ms | Allocations: 3542)
  Rendered incomes/_edit.html.erb (Duration: 2.2ms | Allocations: 1778)
  Rendered incomes/_expense.html.erb (Duration: 2.9ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 8.7ms | Allocations: 12558)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 21ms (Views: 18.3ms | ActiveRecord: 1.7ms | Allocations: 21907)


Started GET "/" for ::1 at 2022-05-30 23:30:35 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 21.1ms | Allocations: 6538)
  Rendered incomes/_expense.html.erb (Duration: 5.2ms | Allocations: 4406)
  Rendered incomes/_edit.html.erb (Duration: 65.0ms | Allocations: 9458)
  Rendered incomes/_expense.html.erb (Duration: 2.6ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 98.6ms | Allocations: 25132)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 3308ms (Views: 3248.5ms | ActiveRecord: 49.3ms | Allocations: 2195513)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-30 23:30:42 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.8ms | Allocations: 515)


Started PATCH "/incomes/6" for ::1 at 2022-05-30 23:30:48 +0900
Processing by IncomesController#update as HTML
  Parameters: {"authenticity_token"=>"d12GG74Kq8jmQOHG8wosoMPgcuUL6iai4I9dxjz0roW6RxB9dEu98mVGRdcfjkOrH3t+pErx0Bpm6y+kNyqoQA==", "income"=>{"date(1i)"=>"2022", "date(2i)"=>"5", "date(3i)"=>"23", "amount"=>"1000", "income_item_id"=>"2", "memo"=>""}, "commit"=>"登録する", "id"=>"6"}
Redirected to http://localhost:3000/
Completed 302 Found in 151ms (ActiveRecord: 112.0ms | Allocations: 10590)


Started GET "/" for ::1 at 2022-05-30 23:30:48 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.2ms | Allocations: 3425)
  Rendered incomes/_expense.html.erb (Duration: 3.5ms | Allocations: 3542)
  Rendered incomes/_edit.html.erb (Duration: 3.0ms | Allocations: 1778)
  Rendered incomes/_expense.html.erb (Duration: 1.5ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 11.1ms | Allocations: 12557)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 32ms (Views: 26.3ms | ActiveRecord: 3.1ms | Allocations: 21915)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-30 23:30:51 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.9ms | Allocations: 530)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-30 23:31:11 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.9ms | Allocations: 542)


Started GET "/" for ::1 at 2022-05-30 23:40:16 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.8ms | Allocations: 3604)
  Rendered incomes/_expense.html.erb (Duration: 4.3ms | Allocations: 4046)
  Rendered incomes/_edit.html.erb (Duration: 15.5ms | Allocations: 7987)
  Rendered incomes/_expense.html.erb (Duration: 2.7ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 26.2ms | Allocations: 19448)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 56ms (Views: 50.9ms | ActiveRecord: 1.6ms | Allocations: 29742)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-30 23:44:02 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 1.6ms | Allocations: 509)


Started GET "/" for ::1 at 2022-05-30 23:56:52 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.3ms | Allocations: 3604)
  Rendered incomes/_expense.html.erb (Duration: 3.0ms | Allocations: 4046)
  Rendered incomes/_edit.html.erb (Duration: 9.9ms | Allocations: 7993)
  Rendered incomes/_expense.html.erb (Duration: 1.6ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 18.7ms | Allocations: 19455)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: d48ddbd223aa65aea5e9
Version: webpack 4.46.0
Time: 4590ms
Built at: 2022/05/30 23:56:59
                                     Asset       Size       Chunks                         Chunk Names
    js/application-56bf29105f6731121a93.js   3.03 MiB  application  [emitted] [immutable]  application
js/application-56bf29105f6731121a93.js.map    2.9 MiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-56bf29105f6731121a93.js js/application-56bf29105f6731121a93.js.map
[./app/javascript/calendar.js] 7.44 KiB {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 826 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 405 hidden modules

Completed 200 OK in 7243ms (Views: 7239.6ms | ActiveRecord: 0.8ms | Allocations: 200218)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-30 23:57:02 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.6ms | Allocations: 522)


Started GET "/" for ::1 at 2022-05-30 23:58:48 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.7ms | Allocations: 3769)
  Rendered incomes/_expense.html.erb (Duration: 3.0ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 283.3ms | Allocations: 178743)
  Rendered incomes/index.html.erb within layouts/application (Duration: 293.2ms | Allocations: 187395)
Completed 500 Internal Server Error in 300ms (ActiveRecord: 0.5ms | Allocations: 188886)


  
ActionView::Template::Error (undefined local variable or method `id' for #<#<Class:0x00007ffe84b419c0>:0x00007ffe84b4b7e0>
Did you mean?  @@id):
    1: <div class="modal-body">
    2: 
    3:   <%= form_with model: Income.find(id), local: true do |f| %>
    4: 
    5:     <%# 日付入力フォーム %>
    6:     <div class="date-contents">
  
app/views/incomes/_edit.html.erb:3
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-30 23:59:33 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.0ms | Allocations: 3430)
  Rendered incomes/_expense.html.erb (Duration: 2.3ms | Allocations: 3542)
  Rendered incomes/_edit.html.erb (Duration: 326.9ms | Allocations: 177764)
  Rendered incomes/index.html.erb within layouts/application (Duration: 333.6ms | Allocations: 185383)
Completed 500 Internal Server Error in 341ms (ActiveRecord: 4.4ms | Allocations: 186367)


  
ActionView::Template::Error (undefined local variable or method `id' for #<#<Class:0x00007ffe84b419c0>:0x00007ffe8de7e9e0>
Did you mean?  @@id):
    1: <div class="modal-body">
    2: 
    3:   <%= form_with model: @income, local: true do |f| %>
    4: 
    5:     <%# 日付入力フォーム %>
    6:     <div class="date-contents">
  
app/views/incomes/_edit.html.erb:3
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-30 23:59:37 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.3ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 2.4ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 3.0ms | Allocations: 4301)
  Rendered incomes/_expense.html.erb (Duration: 1.3ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 11.1ms | Allocations: 16550)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 29ms (Views: 27.5ms | ActiveRecord: 0.5ms | Allocations: 26852)


Started GET "/" for ::1 at 2022-05-30 23:59:40 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 1.7ms | Allocations: 3426)
  Rendered incomes/_expense.html.erb (Duration: 2.4ms | Allocations: 3542)
  Rendered incomes/_edit.html.erb (Duration: 2.1ms | Allocations: 3378)
  Rendered incomes/_expense.html.erb (Duration: 1.6ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 9.7ms | Allocations: 14156)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 22ms (Views: 20.1ms | ActiveRecord: 0.6ms | Allocations: 23412)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-30 23:59:43 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 1.1ms | Allocations: 531)


Started GET "/" for ::1 at 2022-05-31 00:00:35 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.0ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 2.3ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 2.5ms | Allocations: 3725)
  Rendered incomes/_expense.html.erb (Duration: 1.3ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 12.3ms | Allocations: 15980)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 32ms (Views: 27.9ms | ActiveRecord: 2.4ms | Allocations: 26292)


Started GET "/" for ::1 at 2022-05-31 00:00:37 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.4ms | Allocations: 3426)
  Rendered incomes/_expense.html.erb (Duration: 2.1ms | Allocations: 3542)
  Rendered incomes/_edit.html.erb (Duration: 1.5ms | Allocations: 3377)
  Rendered incomes/_expense.html.erb (Duration: 3.1ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 10.3ms | Allocations: 14156)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 27ms (Views: 22.2ms | ActiveRecord: 3.1ms | Allocations: 23405)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:00:39 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.5ms | Allocations: 533)


Started GET "/" for ::1 at 2022-05-31 00:01:25 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.9ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 2.8ms | Allocations: 3887)
  Rendered incomes/index.html.erb within layouts/application (Duration: 8.9ms | Allocations: 9636)
Completed 500 Internal Server Error in 14ms (ActiveRecord: 1.0ms | Allocations: 11135)


  
ActionView::Template::Error (undefined method `id' for nil:NilClass):
    162:           role="tabpanel"
    163:           aria-labelledby="pills-edit-incomes-tab"
    164:         >
    165:           <%= render partial: "edit", locals: { id: @income.id } %>
    166:         </div>
    167:         <div
    168:           class="tab-pane fade"
  
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-31 00:01:27 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.1ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 2.2ms | Allocations: 3887)
  Rendered incomes/index.html.erb within layouts/application (Duration: 6.5ms | Allocations: 9630)
Completed 500 Internal Server Error in 13ms (ActiveRecord: 2.4ms | Allocations: 11129)


  
ActionView::Template::Error (undefined method `id' for nil:NilClass):
    162:           role="tabpanel"
    163:           aria-labelledby="pills-edit-incomes-tab"
    164:         >
    165:           <%= render partial: "edit", locals: { id: @income.id } %>
    166:         </div>
    167:         <div
    168:           class="tab-pane fade"
  
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-31 00:01:46 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.3ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 3.0ms | Allocations: 3888)
  Rendered incomes/index.html.erb within layouts/application (Duration: 8.8ms | Allocations: 9607)
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.5ms | Allocations: 11390)


  
ActionView::Template::Error (undefined method `[]' for nil:NilClass):
    162:           role="tabpanel"
    163:           aria-labelledby="pills-edit-incomes-tab"
    164:         >
    165:           <%= render partial: "edit", locals: { id: @income['id'] } %>
    166:         </div>
    167:         <div
    168:           class="tab-pane fade"
  
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-31 00:01:47 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 1.8ms | Allocations: 3423)
  Rendered incomes/_expense.html.erb (Duration: 2.3ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 5.3ms | Allocations: 8265)
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.9ms | Allocations: 8926)


  
ActionView::Template::Error (undefined method `[]' for nil:NilClass):
    162:           role="tabpanel"
    163:           aria-labelledby="pills-edit-incomes-tab"
    164:         >
    165:           <%= render partial: "edit", locals: { id: @income['id'] } %>
    166:         </div>
    167:         <div
    168:           class="tab-pane fade"
  
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-31 00:01:57 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.2ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 2.2ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 2.7ms | Allocations: 2126)
  Rendered incomes/_expense.html.erb (Duration: 1.9ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 13.3ms | Allocations: 14383)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 30ms (Views: 25.4ms | ActiveRecord: 2.3ms | Allocations: 24693)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:01:59 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.5ms | Allocations: 526)


Started GET "/" for ::1 at 2022-05-31 00:09:06 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.6ms | Allocations: 3604)
  Rendered incomes/_expense.html.erb (Duration: 3.6ms | Allocations: 4046)
  Rendered incomes/_edit.html.erb (Duration: 10.5ms | Allocations: 8010)
  Rendered incomes/_expense.html.erb (Duration: 1.5ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 18.8ms | Allocations: 19471)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 56ms (Views: 51.5ms | ActiveRecord: 0.9ms | Allocations: 29658)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:09:07 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 1.3ms | Allocations: 547)


Started GET "/" for ::1 at 2022-05-31 00:10:46 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 1.5ms | Allocations: 3422)
  Rendered incomes/_expense.html.erb (Duration: 1.3ms | Allocations: 3541)
  Rendered incomes/_edit.html.erb (Duration: 2.3ms | Allocations: 1775)
  Rendered incomes/_expense.html.erb (Duration: 1.4ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 7.1ms | Allocations: 12549)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: 5b51c961fef7a349a534
Version: webpack 4.46.0
Time: 4221ms
Built at: 2022/05/31 0:10:53
                                     Asset       Size       Chunks                         Chunk Names
    js/application-6d1351e5a88b10f89396.js   3.03 MiB  application  [emitted] [immutable]  application
js/application-6d1351e5a88b10f89396.js.map    2.9 MiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-6d1351e5a88b10f89396.js js/application-6d1351e5a88b10f89396.js.map
[./app/javascript/calendar.js] 7.46 KiB {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 826 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 405 hidden modules

Completed 200 OK in 6789ms (Views: 6784.4ms | ActiveRecord: 3.1ms | Allocations: 183962)


Started GET "/incomes/card/?date=2022-05-16" for ::1 at 2022-05-31 00:10:55 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-16"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.7ms | Allocations: 463)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:10:57 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 1.8ms | Allocations: 541)


Started GET "/" for ::1 at 2022-05-31 00:11:39 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.1ms | Allocations: 3422)
  Rendered incomes/_expense.html.erb (Duration: 1.5ms | Allocations: 3541)
  Rendered incomes/_edit.html.erb (Duration: 2.5ms | Allocations: 1775)
  Rendered incomes/_expense.html.erb (Duration: 1.4ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 9.3ms | Allocations: 12549)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Hash: d48ddbd223aa65aea5e9
Version: webpack 4.46.0
Time: 3240ms
Built at: 2022/05/31 0:11:44
                                     Asset       Size       Chunks                         Chunk Names
    js/application-56bf29105f6731121a93.js   3.03 MiB  application  [emitted] [immutable]  application
js/application-56bf29105f6731121a93.js.map    2.9 MiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-56bf29105f6731121a93.js js/application-56bf29105f6731121a93.js.map
[./app/javascript/calendar.js] 7.44 KiB {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 826 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 405 hidden modules

Completed 200 OK in 4971ms (Views: 4968.0ms | ActiveRecord: 1.5ms | Allocations: 143926)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:11:46 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 1.1ms | Allocations: 520)


Started GET "/" for ::1 at 2022-05-31 00:17:44 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.1ms | Allocations: 3604)
  Rendered incomes/_expense.html.erb (Duration: 2.7ms | Allocations: 4046)
  Rendered incomes/_edit.html.erb (Duration: 8.8ms | Allocations: 7993)
  Rendered incomes/_expense.html.erb (Duration: 1.4ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 17.0ms | Allocations: 19454)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 42ms (Views: 37.4ms | ActiveRecord: 1.6ms | Allocations: 29645)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:17:46 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.7ms | Allocations: 526)


Started GET "/" for ::1 at 2022-05-31 00:19:30 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 4.2ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 3.8ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 7.9ms | Allocations: 2126)
  Rendered incomes/_expense.html.erb (Duration: 3.3ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 23.5ms | Allocations: 14400)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 45ms (Views: 36.9ms | ActiveRecord: 5.3ms | Allocations: 24718)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:19:33 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 1.1ms | Allocations: 533)


Started GET "/" for ::1 at 2022-05-31 00:20:00 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 4.6ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 3.2ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 2.6ms | Allocations: 2126)
  Rendered incomes/_expense.html.erb (Duration: 2.0ms | Allocations: 3543)
  Rendered incomes/index.html.erb within layouts/application (Duration: 15.2ms | Allocations: 14398)
[Webpacker] Everything's up-to-date. Nothing to do
Completed 200 OK in 33ms (Views: 29.0ms | ActiveRecord: 2.1ms | Allocations: 24698)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:20:02 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.5ms | Allocations: 520)


Started GET "/" for ::1 at 2022-05-31 00:26:25 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.8ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 3.3ms | Allocations: 3887)
  Rendered incomes/index.html.erb within layouts/application (Duration: 303.6ms | Allocations: 184378)
Completed 500 Internal Server Error in 308ms (ActiveRecord: 1.0ms | Allocations: 185881)


  
ActionView::Template::Error (undefined local variable or method `id' for #<#<Class:0x00007ffe8bfcca88>:0x00007ffe8bfd7000>
Did you mean?  @@id):
    162:           aria-labelledby="pills-edit-incomes-tab"
    163:         >
    164:         
    165:           <%= render partial: "edit", locals: { id: id } %>
    166:         </div>
    167:         <div
    168:           class="tab-pane fade"
  
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-31 00:26:35 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 2.2ms | Allocations: 3423)
  Rendered incomes/_expense.html.erb (Duration: 6.4ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 326.1ms | Allocations: 183025)
Completed 500 Internal Server Error in 350ms (ActiveRecord: 21.4ms | Allocations: 183690)


  
ActionView::Template::Error (undefined local variable or method `id' for #<#<Class:0x00007ffe8bfcca88>:0x00007ffe8d31dc68>
Did you mean?  @@id):
    162:           aria-labelledby="pills-edit-incomes-tab"
    163:         >
    164:         
    165:           <%= render partial: "edit", locals: { id: id } %>
    166:         </div>
    167:         <div
    168:           class="tab-pane fade"
  
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-31 00:26:49 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 4.3ms | Allocations: 3768)
  Rendered incomes/_expense.html.erb (Duration: 3.9ms | Allocations: 3887)
  Rendered incomes/index.html.erb within layouts/application (Duration: 18.6ms | Allocations: 10624)
Completed 500 Internal Server Error in 28ms (ActiveRecord: 3.6ms | Allocations: 12125)


  
ActionView::Template::Error (uninitialized class variable @@id in #<Class:0x00007ffe889f7f70>):
    162:           aria-labelledby="pills-edit-incomes-tab"
    163:         >
    164:         
    165:           <%= render partial: "edit", locals: { id: @@id } %>
    166:         </div>
    167:         <div
    168:           class="tab-pane fade"
  
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-31 00:26:51 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 1.7ms | Allocations: 3423)
  Rendered incomes/_expense.html.erb (Duration: 1.5ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 10.2ms | Allocations: 9283)
Completed 500 Internal Server Error in 17ms (ActiveRecord: 4.0ms | Allocations: 9946)


  
ActionView::Template::Error (uninitialized class variable @@id in #<Class:0x00007ffe889f7f70>):
    162:           aria-labelledby="pills-edit-incomes-tab"
    163:         >
    164:         
    165:           <%= render partial: "edit", locals: { id: @@id } %>
    166:         </div>
    167:         <div
    168:           class="tab-pane fade"
  
app/views/incomes/index.html.erb:165
Started GET "/" for ::1 at 2022-05-31 00:28:43 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 4.1ms | Allocations: 3984)
  Rendered incomes/_expense.html.erb (Duration: 2.2ms | Allocations: 3887)
  Rendered incomes/_edit.html.erb (Duration: 3.0ms | Allocations: 3061)
  Rendered incomes/_expense.html.erb (Duration: 1.7ms | Allocations: 3616)
  Rendered incomes/index.html.erb within layouts/application (Duration: 14.6ms | Allocations: 15874)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-class-properties.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-property-in-object.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-methods", { "loose": true }]
to the "plugins" section of your Babel config.

[Webpacker] Hash: ded44be07019f6925c83
Version: webpack 4.46.0
Time: 4146ms
Built at: 2022/05/31 0:28:50
                                     Asset       Size       Chunks                         Chunk Names
    js/application-440e94a15c727f73f7f5.js   3.03 MiB  application  [emitted] [immutable]  application
js/application-440e94a15c727f73f7f5.js.map    2.9 MiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-440e94a15c727f73f7f5.js js/application-440e94a15c727f73f7f5.js.map
[./app/javascript/calendar.js] 7.51 KiB {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 826 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 405 hidden modules

Completed 200 OK in 6713ms (Views: 6710.0ms | ActiveRecord: 1.6ms | Allocations: 177894)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:28:52 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 1.1ms | Allocations: 520)


Started GET "/" for ::1 at 2022-05-31 00:29:17 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 1.9ms | Allocations: 3427)
  Rendered incomes/_expense.html.erb (Duration: 3.1ms | Allocations: 3542)
  Rendered incomes/_edit.html.erb (Duration: 4.8ms | Allocations: 1778)
  Rendered incomes/_expense.html.erb (Duration: 2.3ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 12.9ms | Allocations: 12558)
[Webpacker] Compiling...
Started GET "/" for ::1 at 2022-05-31 00:29:20 +0900
Processing by IncomesController#index as HTML
  Rendering incomes/index.html.erb within layouts/application
  Rendered incomes/_new.html.erb (Duration: 3.6ms | Allocations: 3421)
  Rendered incomes/_expense.html.erb (Duration: 3.2ms | Allocations: 3541)
  Rendered incomes/_edit.html.erb (Duration: 2.4ms | Allocations: 1775)
  Rendered incomes/_expense.html.erb (Duration: 1.9ms | Allocations: 3541)
  Rendered incomes/index.html.erb within layouts/application (Duration: 12.0ms | Allocations: 12548)
[Webpacker] Compiling...
[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Hash: d48ddbd223aa65aea5e9
Version: webpack 4.46.0
Time: 5088ms
Built at: 2022/05/31 0:29:24
                                     Asset       Size       Chunks                         Chunk Names
    js/application-56bf29105f6731121a93.js   3.03 MiB  application  [emitted] [immutable]  application
js/application-56bf29105f6731121a93.js.map    2.9 MiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-56bf29105f6731121a93.js js/application-56bf29105f6731121a93.js.map
[./app/javascript/calendar.js] 7.44 KiB {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 826 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 405 hidden modules

Completed 200 OK in 7412ms (Views: 7408.8ms | ActiveRecord: 2.4ms | Allocations: 215156)


[Webpacker] Compiled all packs in /Users/kn/original/accounts_book/public/packs
[Webpacker] Hash: d48ddbd223aa65aea5e9
Version: webpack 4.46.0
Time: 4517ms
Built at: 2022/05/31 0:29:27
                                     Asset       Size       Chunks                         Chunk Names
    js/application-56bf29105f6731121a93.js   3.03 MiB  application  [emitted] [immutable]  application
js/application-56bf29105f6731121a93.js.map    2.9 MiB  application  [emitted] [dev]        application
                             manifest.json  364 bytes               [emitted]              
Entrypoint application = js/application-56bf29105f6731121a93.js js/application-56bf29105f6731121a93.js.map
[./app/javascript/calendar.js] 7.44 KiB {application} [built]
[./app/javascript/channels sync recursive _channel\.js$] ./app/javascript/channels sync _channel\.js$ 160 bytes {application} [built]
[./app/javascript/channels/index.js] 211 bytes {application} [built]
[./app/javascript/packs/application.js] 826 bytes {application} [built]
[./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 552 bytes {application} [built]
    + 405 hidden modules

Completed 200 OK in 6597ms (Views: 6546.7ms | ActiveRecord: 49.1ms | Allocations: 194281)


Started GET "/incomes/card/?date=2022-05-23" for ::1 at 2022-05-31 00:29:29 +0900
Processing by IncomesController#card as */*
  Parameters: {"date"=>"2022-05-23"}
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 4.6ms | Allocations: 542)


